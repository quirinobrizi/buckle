/*******************************************************************************
 * Copyright [2017] [Quirino Brizi (quirino.brizi@gmail.com)]
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/'use strict';var cov_2hco2x76ad=function(){var path='/home/quirino/Projects/buckle/src/domain/repository/ContainerRepository.js',hash='b13bb5273ce35414b76f28aab60561ea39fdf3fc',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/quirino/Projects/buckle/src/domain/repository/ContainerRepository.js',statementMap:{'0':{start:{line:19,column:13},end:{line:19,column:28}},'1':{start:{line:21,column:30},end:{line:21,column:91}},'2':{start:{line:22,column:15},end:{line:22,column:53}},'3':{start:{line:24,column:0},end:{line:139,column:1}},'4':{start:{line:27,column:8},end:{line:27,column:53}},'5':{start:{line:28,column:8},end:{line:28,column:55}},'6':{start:{line:30,column:8},end:{line:30,column:29}},'7':{start:{line:38,column:24},end:{line:38,column:83}},'8':{start:{line:39,column:21},end:{line:39,column:66}},'9':{start:{line:40,column:8},end:{line:45,column:9}},'10':{start:{line:41,column:34},end:{line:41,column:71}},'11':{start:{line:42,column:12},end:{line:42,column:61}},'12':{start:{line:43,column:12},end:{line:43,column:59}},'13':{start:{line:44,column:12},end:{line:44,column:61}},'14':{start:{line:46,column:8},end:{line:46,column:22}},'15':{start:{line:50,column:21},end:{line:50,column:23}},'16':{start:{line:51,column:25},end:{line:51,column:71}},'17':{start:{line:52,column:8},end:{line:60,column:9}},'18':{start:{line:53,column:28},end:{line:53,column:77}},'19':{start:{line:54,column:12},end:{line:58,column:13}},'20':{start:{line:55,column:16},end:{line:55,column:93}},'21':{start:{line:56,column:16},end:{line:56,column:91}},'22':{start:{line:57,column:16},end:{line:57,column:93}},'23':{start:{line:59,column:12},end:{line:59,column:35}},'24':{start:{line:61,column:8},end:{line:61,column:22}},'25':{start:{line:69,column:25},end:{line:72,column:9}},'26':{start:{line:73,column:8},end:{line:73,column:58}},'27':{start:{line:74,column:8},end:{line:74,column:56}},'28':{start:{line:75,column:8},end:{line:75,column:58}},'29':{start:{line:77,column:8},end:{line:77,column:62}},'30':{start:{line:81,column:8},end:{line:81,column:83}},'31':{start:{line:85,column:8},end:{line:85,column:76}},'32':{start:{line:89,column:8},end:{line:89,column:68}},'33':{start:{line:100,column:8},end:{line:121,column:9}},'34':{start:{line:101,column:29},end:{line:101,column:84}},'35':{start:{line:102,column:32},end:{line:102,column:96}},'36':{start:{line:103,column:24},end:{line:103,column:70}},'37':{start:{line:104,column:25},end:{line:104,column:113}},'38':{start:{line:105,column:36},end:{line:105,column:76}},'39':{start:{line:106,column:36},end:{line:106,column:107}},'40':{start:{line:107,column:12},end:{line:107,column:51}},'41':{start:{line:108,column:23},end:{line:108,column:74}},'42':{start:{line:109,column:12},end:{line:111,column:13}},'43':{start:{line:110,column:16},end:{line:110,column:71}},'44':{start:{line:112,column:24},end:{line:112,column:145}},'45':{start:{line:113,column:12},end:{line:115,column:13}},'46':{start:{line:114,column:16},end:{line:114,column:73}},'47':{start:{line:116,column:12},end:{line:116,column:113}},'48':{start:{line:117,column:12},end:{line:117,column:24}},'49':{start:{line:119,column:12},end:{line:119,column:71}},'50':{start:{line:120,column:12},end:{line:120,column:25}},'51':{start:{line:125,column:23},end:{line:125,column:56}},'52':{start:{line:126,column:8},end:{line:136,column:9}},'53':{start:{line:127,column:12},end:{line:127,column:84}},'54':{start:{line:128,column:12},end:{line:135,column:14}},'55':{start:{line:129,column:16},end:{line:134,column:18}},'56':{start:{line:130,column:20},end:{line:133,column:21}},'57':{start:{line:131,column:24},end:{line:131,column:127}},'58':{start:{line:132,column:24},end:{line:132,column:36}},'59':{start:{line:137,column:8},end:{line:137,column:21}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:57},end:{line:31,column:5}},line:26},'1':{name:'(anonymous_1)',decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:27},end:{line:47,column:5}},line:37},'2':{name:'(anonymous_2)',decl:{start:{line:49,column:4},end:{line:49,column:5}},loc:{start:{line:49,column:19},end:{line:62,column:5}},line:49},'3':{name:'(anonymous_3)',decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:20},end:{line:78,column:5}},line:68},'4':{name:'(anonymous_4)',decl:{start:{line:80,column:4},end:{line:80,column:5}},loc:{start:{line:80,column:62},end:{line:82,column:5}},line:80},'5':{name:'(anonymous_5)',decl:{start:{line:84,column:4},end:{line:84,column:5}},loc:{start:{line:84,column:32},end:{line:86,column:5}},line:84},'6':{name:'(anonymous_6)',decl:{start:{line:88,column:4},end:{line:88,column:5}},loc:{start:{line:88,column:33},end:{line:90,column:5}},line:88},'7':{name:'(anonymous_7)',decl:{start:{line:99,column:4},end:{line:99,column:5}},loc:{start:{line:99,column:51},end:{line:122,column:5}},line:99},'8':{name:'(anonymous_8)',decl:{start:{line:124,column:4},end:{line:124,column:5}},loc:{start:{line:124,column:36},end:{line:138,column:5}},line:124},'9':{name:'(anonymous_9)',decl:{start:{line:128,column:42},end:{line:128,column:43}},loc:{start:{line:128,column:49},end:{line:135,column:13}},line:128},'10':{name:'(anonymous_10)',decl:{start:{line:129,column:38},end:{line:129,column:39}},loc:{start:{line:129,column:43},end:{line:134,column:17}},line:129}},branchMap:{'0':{loc:{start:{line:40,column:8},end:{line:45,column:9}},type:'if',locations:[{start:{line:40,column:8},end:{line:45,column:9}},{start:{line:40,column:8},end:{line:45,column:9}}],line:40},'1':{loc:{start:{line:54,column:12},end:{line:58,column:13}},type:'if',locations:[{start:{line:54,column:12},end:{line:58,column:13}},{start:{line:54,column:12},end:{line:58,column:13}}],line:54},'2':{loc:{start:{line:69,column:25},end:{line:72,column:9}},type:'binary-expr',locations:[{start:{line:69,column:25},end:{line:69,column:65}},{start:{line:69,column:69},end:{line:72,column:9}}],line:69},'3':{loc:{start:{line:106,column:36},end:{line:106,column:107}},type:'cond-expr',locations:[{start:{line:106,column:76},end:{line:106,column:93}},{start:{line:106,column:96},end:{line:106,column:107}}],line:106},'4':{loc:{start:{line:106,column:36},end:{line:106,column:73}},type:'binary-expr',locations:[{start:{line:106,column:36},end:{line:106,column:53}},{start:{line:106,column:57},end:{line:106,column:73}}],line:106},'5':{loc:{start:{line:109,column:12},end:{line:111,column:13}},type:'if',locations:[{start:{line:109,column:12},end:{line:111,column:13}},{start:{line:109,column:12},end:{line:111,column:13}}],line:109},'6':{loc:{start:{line:113,column:12},end:{line:115,column:13}},type:'if',locations:[{start:{line:113,column:12},end:{line:115,column:13}},{start:{line:113,column:12},end:{line:115,column:13}}],line:113},'7':{loc:{start:{line:126,column:8},end:{line:136,column:9}},type:'if',locations:[{start:{line:126,column:8},end:{line:136,column:9}},{start:{line:126,column:8},end:{line:136,column:9}}],line:126},'8':{loc:{start:{line:130,column:20},end:{line:133,column:21}},type:'if',locations:[{start:{line:130,column:20},end:{line:133,column:21}},{start:{line:130,column:20},end:{line:133,column:21}}],line:130}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const util=(cov_2hco2x76ad.s[0]++,require('util'));const ScaleContainerAdaptor=(cov_2hco2x76ad.s[1]++,require('../../infrastructure/adaptor/ScaleContainerAdaptor'));const logger=(cov_2hco2x76ad.s[2]++,require('../../infrastructure/Logger'));cov_2hco2x76ad.s[3]++;module.exports=class ContainerRepository{constructor(dockerEngineClient,containerTranslator){cov_2hco2x76ad.f[0]++;cov_2hco2x76ad.s[4]++;this.dockerEngineClient=dockerEngineClient;cov_2hco2x76ad.s[5]++;this.containerTranslator=containerTranslator;// store augmented container information in memory...
cov_2hco2x76ad.s[6]++;this.containers=[];}/**
     * Queries information about a container specified via its id and return a
     * container.
     */async get(containerId){cov_2hco2x76ad.f[1]++;var container=(cov_2hco2x76ad.s[7]++,await this.dockerEngineClient.inspectContainer(containerId));var answer=(cov_2hco2x76ad.s[8]++,this.containerTranslator.translate(container));cov_2hco2x76ad.s[9]++;if(answer.containerId()in this.containers){cov_2hco2x76ad.b[0][0]++;var storedContainer=(cov_2hco2x76ad.s[10]++,this.containers[answer.containerId()]);cov_2hco2x76ad.s[11]++;answer.setStatistics(storedContainer.statistics);cov_2hco2x76ad.s[12]++;answer.setAnomalies(storedContainer.anomalies);cov_2hco2x76ad.s[13]++;answer.setLastUpdate(storedContainer.lastUpdate);}else{cov_2hco2x76ad.b[0][1]++;}cov_2hco2x76ad.s[14]++;return answer;}async getAll(){cov_2hco2x76ad.f[2]++;var answer=(cov_2hco2x76ad.s[15]++,[]);var containers=(cov_2hco2x76ad.s[16]++,await this.dockerEngineClient.listContainers());cov_2hco2x76ad.s[17]++;for(var i=0;i<containers.length;i++){var container=(cov_2hco2x76ad.s[18]++,this.containerTranslator.translate(containers[i]));cov_2hco2x76ad.s[19]++;if(container.containerId()in this.containers){cov_2hco2x76ad.b[1][0]++;cov_2hco2x76ad.s[20]++;container.setStatistics(this.containers[container.containerId()].statistics);cov_2hco2x76ad.s[21]++;container.setAnomalies(this.containers[container.containerId()].anomalies);cov_2hco2x76ad.s[22]++;container.setLastUpdate(this.containers[container.containerId()].lastUpdate);}else{cov_2hco2x76ad.b[1][1]++;}cov_2hco2x76ad.s[23]++;answer.push(container);}cov_2hco2x76ad.s[24]++;return answer;}/**
     * Save a container
     * @param  {[Container} container the container to save
     */save(container){cov_2hco2x76ad.f[3]++;var _container=(cov_2hco2x76ad.s[25]++,(cov_2hco2x76ad.b[2][0]++,this.containers[container.containerId()])||(cov_2hco2x76ad.b[2][1]++,{statistics:[],anomalies:[]}));cov_2hco2x76ad.s[26]++;_container.statistics=container.getStatistics();cov_2hco2x76ad.s[27]++;_container.anomalies=container.getAnomalies();cov_2hco2x76ad.s[28]++;_container.lastUpdate=container.getLastUpdate();cov_2hco2x76ad.s[29]++;this.containers[container.containerId()]=_container;}registerStatisticsListener(containerId,success,failure){cov_2hco2x76ad.f[4]++;cov_2hco2x76ad.s[30]++;this.dockerEngineClient.containerStatistics(containerId,success,failure);}update(containerId,config){cov_2hco2x76ad.f[5]++;cov_2hco2x76ad.s[31]++;return this.dockerEngineClient.updateContainer(containerId,config);}deleteContainer(containerId){cov_2hco2x76ad.f[6]++;cov_2hco2x76ad.s[32]++;return this.dockerEngineClient.deleteContainer(containerId);}/**
     * Deploy a container.
     * @param {string} name the name of the container to deploy
     * @param {string} tag  the version the container should be deployed at
     * @param {boolean} recreate a flag indicating if already running containers should be recreated
     * @param {number} cardinality the number of conatainers to deploy, if 0 or -1 the cardinality will be set as the currently running containers.
     */async deploy(name,tag,recreate,cardinality){cov_2hco2x76ad.f[7]++;cov_2hco2x76ad.s[33]++;try{var containers=(cov_2hco2x76ad.s[34]++,await this.dockerEngineClient.getContainersByName(name));var containerInfo=(cov_2hco2x76ad.s[35]++,await this.dockerEngineClient.inspectContainer(containers[0].Id));var image=(cov_2hco2x76ad.s[36]++,/([^:]*):?(.*)$/g.exec(containers[0].Image)[1]);var config=(cov_2hco2x76ad.s[37]++,new ScaleContainerAdaptor().adapt(containerInfo,util.format("%s:%s",image,tag),name));var startBeforeDelete=(cov_2hco2x76ad.s[38]++,this._hasHostExposedPorts(containerInfo));var targetCardinality=(cov_2hco2x76ad.s[39]++,(cov_2hco2x76ad.b[4][0]++,cardinality==-1)||(cov_2hco2x76ad.b[4][1]++,cardinality==0)?(cov_2hco2x76ad.b[3][0]++,containers.length):(cov_2hco2x76ad.b[3][1]++,cardinality));cov_2hco2x76ad.s[40]++;logger.info("pulling image %s",image);var pull=(cov_2hco2x76ad.s[41]++,await this.dockerEngineClient.pullImage(image,tag));cov_2hco2x76ad.s[42]++;if(logger.debug){cov_2hco2x76ad.b[5][0]++;cov_2hco2x76ad.s[43]++;logger.debug("pull response %s",JSON.stringify(pull));}else{cov_2hco2x76ad.b[5][1]++;}var scale=(cov_2hco2x76ad.s[44]++,await this.dockerEngineClient.deployOrScaleContainer(config,name,image,targetCardinality,recreate,startBeforeDelete));cov_2hco2x76ad.s[45]++;if(logger.debug){cov_2hco2x76ad.b[6][0]++;cov_2hco2x76ad.s[46]++;logger.debug("scale response %s",JSON.stringify(scale));}else{cov_2hco2x76ad.b[6][1]++;}cov_2hco2x76ad.s[47]++;logger.info("container %s deployed at version %s with cardinality %s",name,tag,targetCardinality);cov_2hco2x76ad.s[48]++;return true;}catch(e){cov_2hco2x76ad.s[49]++;logger.error("unable to deploy requested container %s",e);cov_2hco2x76ad.s[50]++;return false;}}_hasHostExposedPorts(container){cov_2hco2x76ad.f[8]++;var bindings=(cov_2hco2x76ad.s[51]++,container.HostConfig.PortBindings);cov_2hco2x76ad.s[52]++;if(bindings){cov_2hco2x76ad.b[7][0]++;cov_2hco2x76ad.s[53]++;console.log("Port bindings available for container [%s]",container.Id);cov_2hco2x76ad.s[54]++;Object.keys(bindings).forEach(key=>{cov_2hco2x76ad.f[9]++;cov_2hco2x76ad.s[55]++;bindings[key].forEach(b=>{cov_2hco2x76ad.f[10]++;cov_2hco2x76ad.s[56]++;if(b.HostPort){cov_2hco2x76ad.b[8][0]++;cov_2hco2x76ad.s[57]++;console.log("container [%s] has at least one port exposed on the host [%s]",container.Id,b.HostPort);cov_2hco2x76ad.s[58]++;return true;}else{cov_2hco2x76ad.b[8][1]++;}});});}else{cov_2hco2x76ad.b[7][1]++;}cov_2hco2x76ad.s[59]++;return false;}};