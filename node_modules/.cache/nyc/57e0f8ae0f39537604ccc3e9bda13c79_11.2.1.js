/*******************************************************************************
 * Copyright [2017] [Quirino Brizi (quirino.brizi@gmail.com)]
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/'use strict';var cov_1ovil198c2=function(){var path='/home/quirino/Projects/buckle/src/domain/model/Environment.js',hash='e154242f8c12a528fe9ac9f38321c8f1a5579236',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/quirino/Projects/buckle/src/domain/model/Environment.js',statementMap:{'0':{start:{line:19,column:15},end:{line:19,column:53}},'1':{start:{line:25,column:0},end:{line:143,column:2}},'2':{start:{line:35,column:8},end:{line:35,column:25}},'3':{start:{line:36,column:8},end:{line:36,column:31}},'4':{start:{line:37,column:8},end:{line:37,column:36}},'5':{start:{line:39,column:8},end:{line:39,column:40}},'6':{start:{line:43,column:8},end:{line:43,column:25}},'7':{start:{line:47,column:8},end:{line:47,column:28}},'8':{start:{line:57,column:8},end:{line:59,column:9}},'9':{start:{line:58,column:12},end:{line:58,column:71}},'10':{start:{line:60,column:8},end:{line:60,column:20}},'11':{start:{line:69,column:8},end:{line:69,column:31}},'12':{start:{line:78,column:21},end:{line:78,column:23}},'13':{start:{line:79,column:8},end:{line:83,column:9}},'14':{start:{line:80,column:12},end:{line:82,column:13}},'15':{start:{line:81,column:16},end:{line:81,column:39}},'16':{start:{line:84,column:8},end:{line:84,column:22}},'17':{start:{line:94,column:8},end:{line:94,column:48}},'18':{start:{line:104,column:8},end:{line:106,column:9}},'19':{start:{line:105,column:12},end:{line:105,column:59}},'20':{start:{line:107,column:8},end:{line:107,column:20}},'21':{start:{line:125,column:24},end:{line:125,column:71}},'22':{start:{line:126,column:8},end:{line:126,column:46}},'23':{start:{line:127,column:8},end:{line:140,column:9}},'24':{start:{line:128,column:12},end:{line:128,column:80}},'25':{start:{line:129,column:29},end:{line:129,column:78}},'26':{start:{line:130,column:40},end:{line:130,column:97}},'27':{start:{line:131,column:12},end:{line:138,column:13}},'28':{start:{line:132,column:16},end:{line:137,column:17}},'29':{start:{line:133,column:20},end:{line:133,column:82}},'30':{start:{line:135,column:20},end:{line:135,column:73}},'31':{start:{line:136,column:20},end:{line:136,column:61}},'32':{start:{line:139,column:12},end:{line:139,column:30}},'33':{start:{line:141,column:8},end:{line:141,column:18}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:31},end:{line:40,column:5}},line:34},'1':{name:'(anonymous_1)',decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:14},end:{line:44,column:5}},line:42},'2':{name:'(anonymous_2)',decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:17},end:{line:48,column:5}},line:46},'3':{name:'(anonymous_3)',decl:{start:{line:56,column:4},end:{line:56,column:5}},loc:{start:{line:56,column:30},end:{line:61,column:5}},line:56},'4':{name:'(anonymous_4)',decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:20},end:{line:70,column:5}},line:68},'5':{name:'(anonymous_5)',decl:{start:{line:77,column:4},end:{line:77,column:5}},loc:{start:{line:77,column:30},end:{line:85,column:5}},line:77},'6':{name:'(anonymous_6)',decl:{start:{line:93,column:4},end:{line:93,column:5}},loc:{start:{line:93,column:30},end:{line:95,column:5}},line:93},'7':{name:'(anonymous_7)',decl:{start:{line:103,column:4},end:{line:103,column:5}},loc:{start:{line:103,column:48},end:{line:108,column:5}},line:103},'8':{name:'(anonymous_8)',decl:{start:{line:124,column:4},end:{line:124,column:5}},loc:{start:{line:124,column:71},end:{line:142,column:5}},line:124}},branchMap:{'0':{loc:{start:{line:80,column:12},end:{line:82,column:13}},type:'if',locations:[{start:{line:80,column:12},end:{line:82,column:13}},{start:{line:80,column:12},end:{line:82,column:13}}],line:80},'1':{loc:{start:{line:104,column:8},end:{line:106,column:9}},type:'if',locations:[{start:{line:104,column:8},end:{line:106,column:9}},{start:{line:104,column:8},end:{line:106,column:9}}],line:104},'2':{loc:{start:{line:127,column:8},end:{line:140,column:9}},type:'if',locations:[{start:{line:127,column:8},end:{line:140,column:9}},{start:{line:127,column:8},end:{line:140,column:9}}],line:127}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0},b:{'0':[0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const logger=(cov_1ovil198c2.s[0]++,require('../../infrastructure/Logger'));/**
 * A.R. describe the environment nnodes and containers live on.
 * @type {Environment}
 */cov_1ovil198c2.s[1]++;module.exports=class Environment{/**
     * Create a new environemnt instance
     * @method constructor
     * @param  {string}    name    The environment name
     * @param  {string}    version The environment version
     * @return {Environment}       The new instance
     */constructor(name,version){cov_1ovil198c2.f[0]++;cov_1ovil198c2.s[2]++;this.name=name;cov_1ovil198c2.s[3]++;this.version=version;cov_1ovil198c2.s[4]++;this.containers=new Map();cov_1ovil198c2.s[5]++;this.containerRepository=null;}getName(){cov_1ovil198c2.f[1]++;cov_1ovil198c2.s[6]++;return this.name;}getVersion(){cov_1ovil198c2.f[2]++;cov_1ovil198c2.s[7]++;return this.version;}/**
     * Allow to add containers to this repository in a fluent manner
     * @method setContainers
     * @param  {Array<Container>}      containers the containers to add to this environment
     * @return {Environment}  this environment
     */setContainers(containers){cov_1ovil198c2.f[3]++;cov_1ovil198c2.s[8]++;for(let container of containers){cov_1ovil198c2.s[9]++;this.containers.set(container.getContainerId(),container);}cov_1ovil198c2.s[10]++;return this;}/**
     * Retrieve the container present on this environemnt
     * @method getContainers
     * @return {Map<Container>}      the container present on this environemnt
     */getContainers(){cov_1ovil198c2.f[4]++;cov_1ovil198c2.s[11]++;return this.containers;}/**
     * Retrieves all containers deployed on the requested node.
     * @param {string} node the node name
     * @return {Array.<Container>}  the containers deployed on the requested node
     */getContainersOnNode(node){cov_1ovil198c2.f[5]++;let answer=(cov_1ovil198c2.s[12]++,[]);cov_1ovil198c2.s[13]++;for(let[_,container]of this.containers){cov_1ovil198c2.s[14]++;if(container.isDeployedOnNode(node)){cov_1ovil198c2.b[0][0]++;cov_1ovil198c2.s[15]++;answer.push(container);}else{cov_1ovil198c2.b[0][1]++;}}cov_1ovil198c2.s[16]++;return answer;}/**
     * Allow retrieve a specific container via its identifier
     * @method getContainer
     * @param  {string}     containerId the container identifier
     * @return {Container}                 the container
     */getContainer(containerId){cov_1ovil198c2.f[6]++;cov_1ovil198c2.s[17]++;return this.containers.get(containerId);}/**
     * Allow to set the container repository in a fluent mode, the repository is set
     * only if the internal variable is not null.
     * @method setContainerRepository
     * @param  {ContainerRepository}               containerRepository an instance of ContainerRepository
     */setContainerRepository(containerRepository){cov_1ovil198c2.f[7]++;cov_1ovil198c2.s[18]++;if(!this.containerRepository){cov_1ovil198c2.b[1][0]++;cov_1ovil198c2.s[19]++;this.containerRepository=containerRepository;}else{cov_1ovil198c2.b[1][1]++;}cov_1ovil198c2.s[20]++;return this;}// Business Methods
/**
     * Inspect the received and istoric realization to discover eventual anomalies
     * for the container the realizations is received for, if any anomaly is discovered
     * then all containers on the node that contain the origin container are inspected and
     * updated if needed.
     * Other containers on a node are updated if the resources on the requested node are
     * saturated.
     * @method inspectRealizationsForAnomalies
     * @param  {Realization}          realization the realization received
     * @param  {AnomalyService}       anomalyService the anomaly service
     * @return {Array.<Container>}      the list of update containers if any
     */async inspectRealizationsForAnomalies(realization,anomalyService){cov_1ovil198c2.f[8]++;let container=(cov_1ovil198c2.s[21]++,this.getContainer(realization.getContainerId()));cov_1ovil198c2.s[22]++;container.addRealization(realization);cov_1ovil198c2.s[23]++;if(container.inspect(anomalyService)){cov_1ovil198c2.b[2][0]++;cov_1ovil198c2.s[24]++;logger.info("found anomalies on container %s",container.getName());let containers=(cov_1ovil198c2.s[25]++,this.getContainersOnNode(container.getNodeName()));let containerRequirements=(cov_1ovil198c2.s[26]++,await container.getNode().distributeResources(containers));cov_1ovil198c2.s[27]++;for(let[container,requirement]of containerRequirements){cov_1ovil198c2.s[28]++;try{cov_1ovil198c2.s[29]++;container.updateLimits(this.containerRepository,requirement);}finally{cov_1ovil198c2.s[30]++;realization.setAllocatedCpu(container.getCpuLimit());cov_1ovil198c2.s[31]++;this.containerRepository.save(container);}}cov_1ovil198c2.s[32]++;return containers;}else{cov_1ovil198c2.b[2][1]++;}cov_1ovil198c2.s[33]++;return[];}};